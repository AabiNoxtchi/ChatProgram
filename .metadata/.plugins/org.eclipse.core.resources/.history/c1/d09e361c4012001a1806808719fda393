package Server;

import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.Socket;

public class ClientListner extends Thread{
	
	private Socket socket;
	private ObjectInputStream input;
   // private OutputStream os;
    private ObjectOutputStream output;
   // private InputStream is;
	
	public ClientListner(Socket socket) {
		this.socket=socket;
		try {
		input = new ObjectInputStream(socket.getInputStream());
        
        output = new ObjectOutputStream(socket.getOutputStream());
		}catch(IOException e) {
			e.printStackTrace();
		}
		
	}
	
	public void run() {
		
		
            System.out.println("Inside ServerClient.run");
           
                
            Message msg = (Message) input.readObject();
            
           /* checkDuplicateUsername(firstMessage);
            writers.add(output);
            sendNotification(firstMessage);
            addToList();*/

                while (socket.isConnected()) {
                	
                	
					
						
						
						if (msg != null) {
		                       // System.out.println(inputmsg.getType() + " - " + inputmsg.getName() + ": " + inputmsg.getMsg());
		                        switch (msg.getType()) {
		                            case Register:
		                            	System.out.println("registering new user");
		                            	System.out.println(msg.getUser().getUserName());
		                               // to do
		                                break;
		                            case LogIn:
		                               //to do
		                                break;
		                            
		                        }
		                    }
						
					} catch (ClassNotFoundException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
                	
                    
                }
                try {
                	socket.close();
                }
                catch(IOException e) {
            	
    			System.out.println("Unable to disconnect client !");
    		
            } 
	}

}
